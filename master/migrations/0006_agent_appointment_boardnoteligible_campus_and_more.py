# Generated by Django 4.1.7 on 2023-03-23 18:18

from django.db import migrations, models
import django.db.models.deletion
import master.models


class Migration(migrations.Migration):

    dependencies = [
        ('enquiry', '0017_alter_enquiry_course_interested_and_more'),
        ('master', '0005_alter_application_status_app_status_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent_Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_appointment', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='boardNotEligible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_name', models.CharField(max_length=50, verbose_name='Boards')),
            ],
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus_name', models.CharField(max_length=50, verbose_name='Campus Name')),
            ],
        ),
        migrations.CreateModel(
            name='english_requirments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english_tests', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('english_test', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'English Test',
                'verbose_name_plural': 'English Tests',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=50, verbose_name='Location Name')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='Payment_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(max_length=100, verbose_name='Payment type')),
            ],
        ),
        migrations.CreateModel(
            name='UniversityRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finance_for_CAS', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], default=True, max_length=10, verbose_name='Finance for CAS')),
                ('credibility_interview', models.CharField(blank=True, choices=[('YES', 'Yes'), ('NO', 'No')], default=True, max_length=10, verbose_name='Credibility Interview')),
                ('offer_timeline', models.CharField(max_length=100, verbose_name='Offer time line')),
                ('deposit_for_CAS', models.CharField(max_length=50, verbose_name='Deposit for CAS')),
                ('scholarship', models.CharField(max_length=100, verbose_name='Scholarship')),
                ('appointment_of_agent', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('University Discretion', 'University Discreation')], max_length=50, verbose_name='Appointment of agent')),
                ('change_of_agent', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No'), ('University Discretion', 'University Discreation')], max_length=50, verbose_name='Appointment of agent')),
                ('amount', models.CharField(blank=True, max_length=50)),
                ('app_fees', models.CharField(blank=True, max_length=50, null=True, verbose_name='ApplicationFees')),
                ('dependent_acceptance', models.CharField(max_length=100, verbose_name='Dependent Acceptance')),
                ('accept_case_from_high_risk', models.CharField(max_length=50, verbose_name='Accept Case from High Risk')),
                ('general_visa_refusal', models.CharField(max_length=100, verbose_name='General Visa Refusal type')),
                ('student_visa_refusal', models.CharField(max_length=100, verbose_name='Student Visa Refusal type')),
                ('web_link', models.URLField(default=None, null=True)),
                ('english_waiver', models.PositiveIntegerField(verbose_name='English Waiver-(Percent)')),
                ('academic_requirement', models.PositiveIntegerField(verbose_name=' Academic Requirement General(Percent)')),
                ('ielts_score', models.DecimalField(decimal_places=1, max_digits=3, validators=[master.models.validate_negatives], verbose_name='IELTS')),
                ('tofel', models.DecimalField(decimal_places=1, max_digits=3, validators=[master.models.validate_negatives], verbose_name='TOFEL')),
                ('pte', models.DecimalField(decimal_places=1, max_digits=3, validators=[master.models.validate_negatives], verbose_name='PTE')),
                ('others', models.CharField(max_length=50, verbose_name='Others')),
                ('gap', models.PositiveIntegerField(verbose_name='Education GAP (In years)')),
                ('placement_option', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], default='NO', max_length=50, verbose_name='Placement Option ')),
                ('dependency_acceptance', models.CharField(choices=[('YES', 'Yes'), ('NO', 'No')], default='NO', max_length=50, verbose_name='Dependent Acceptance')),
                ('board_not_eligible', models.ManyToManyField(to='master.boardnoteligible', verbose_name='Region or Boards not Eligible for English Waiver')),
                ('campus', models.ManyToManyField(to='master.campus')),
                ('english_requirement', models.ManyToManyField(to='master.english_requirments')),
                ('english_test', models.ManyToManyField(to='master.englishtest', verbose_name='English Test Accepted')),
                ('general_documents', models.ManyToManyField(related_name='university_requirements', to='master.documents_required')),
                ('intake', models.ManyToManyField(to='master.intake')),
                ('location', models.ManyToManyField(to='master.location', verbose_name='Locations')),
                ('mandatory_docs', models.ManyToManyField(related_name='university_requirement', to='master.documents_required', verbose_name='Mandatory Document')),
                ('payment_option', models.ManyToManyField(to='master.payment_option', verbose_name='Payment Option')),
                ('university_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enquiry.university', verbose_name='University Name')),
            ],
        ),
    ]
